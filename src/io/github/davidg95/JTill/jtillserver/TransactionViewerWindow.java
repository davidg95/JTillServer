/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.davidg95.JTill.jtillserver;

import io.github.davidg95.JTill.jtill.*;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class TransactionViewerWindow extends javax.swing.JInternalFrame {

    private static final TransactionViewerWindow window;

    private final DataConnect dc;

    private final DefaultTableModel model;
    private List<Sale> tableContents;

    /**
     * Creates new form TransactionViewerWindow
     */
    public TransactionViewerWindow() {
        super();
        this.dc = GUI.gui.dc;
        super.setClosable(true);
        super.setMaximizable(true);
        super.setIconifiable(true);
        initComponents();
        model = (DefaultTableModel) table.getModel();
        table.setModel(model);
        init();
    }

    static {
        window = new TransactionViewerWindow();
        GUI.gui.internal.add(window);
    }

    public static void showWindow() {
        window.setVisible(true);
        try {
            window.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(TransactionViewerWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void init() {
        try {
            tableContents = dc.getAllSales();
            setTable();
            final List<Staff> staff = dc.getAllStaff();
            final List<Till> tills = dc.getAllTills();
            cmbStaff.setModel(new DefaultComboBoxModel(staff.toArray()));
            cmbTerminal.setModel(new DefaultComboBoxModel(tills.toArray()));
        } catch (IOException | SQLException ex) {
            Logger.getLogger(TransactionViewerWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTable() {
        model.setRowCount(0);
        for (Sale s : tableContents) {
            try {
                final Staff staff = dc.getStaff(s.getStaff());
                final Till till = dc.getTill(s.getTerminal());
                model.addRow(new Object[]{s.getId(), s.getDate(), s.getTotal().setScale(2), staff.getName(), till.getName()});
            } catch (IOException | StaffNotFoundException | SQLException | JTillException ex) {
                Logger.getLogger(TransactionViewerWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbTerminal = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbStaff = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        chkAllTills = new javax.swing.JCheckBox();
        chkAllStaff = new javax.swing.JCheckBox();
        spinMoneyMin = new javax.swing.JSpinner();
        spinMoneyMax = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spinStart = new javax.swing.JSpinner();
        spinEnd = new javax.swing.JSpinner();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Transaction Viewer");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Timestamp", "Value", "Staff", "Terminal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setText("Terminal:");

        cmbTerminal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTerminal.setEnabled(false);

        jLabel2.setText("Staff:");

        cmbStaff.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbStaff.setEnabled(false);

        jLabel3.setText("Value from:");

        jLabel4.setText("Value to:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        chkAllTills.setSelected(true);
        chkAllTills.setText("All");
        chkAllTills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAllTillsActionPerformed(evt);
            }
        });

        chkAllStaff.setSelected(true);
        chkAllStaff.setText("All");
        chkAllStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAllStaffActionPerformed(evt);
            }
        });

        spinMoneyMin.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));
        spinMoneyMin.setValue(-99999.99);

        spinMoneyMax.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 1.0d));
        spinMoneyMax.setValue(99999.99);

        jLabel5.setText("Start date:");

        jLabel6.setText("End date:");

        spinStart.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(-3600000L), null, null, java.util.Calendar.DAY_OF_MONTH));

        spinEnd.setModel(new javax.swing.SpinnerDateModel());

        btnClear.setText("Clear Search");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbStaff, javax.swing.GroupLayout.Alignment.LEADING, 0, 133, Short.MAX_VALUE)
                                    .addComponent(cmbTerminal, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkAllTills)
                                    .addComponent(chkAllStaff)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spinEnd, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(spinStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                .addComponent(spinMoneyMax, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(spinMoneyMin, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkAllTills))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkAllStaff))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(spinMoneyMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(spinMoneyMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(spinStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(spinEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch)
                            .addComponent(btnClear))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        final ModalDialog mDialog = new ModalDialog(this, "Search", "Searching transactions...");
        final Runnable run = () -> {
            try {
                final Staff staff = (Staff) cmbStaff.getModel().getSelectedItem();
                final Till terminal = (Till) cmbTerminal.getModel().getSelectedItem();
                final boolean allStaff = chkAllStaff.isSelected();
                final boolean allTills = chkAllTills.isSelected();

                final double minVal = (double) spinMoneyMin.getValue();
                final double maxVal = (double) spinMoneyMax.getValue();

                final Date startDate = (Date) spinStart.getValue();
                final Date endDate = (Date) spinEnd.getValue();

                try {
                    final List<Sale> sales = dc.getAllSales();
                    final List<Sale> newList = new LinkedList<>();
                    for (Sale s : sales) {
                        if ((allTills || s.getTerminal() == terminal.getId()) && (allStaff || s.getStaff() == staff.getId()) && s.getTotal().compareTo(new BigDecimal(minVal)) >= 0 && s.getTotal().compareTo(new BigDecimal(maxVal)) <= 0 && s.getDate().after(startDate) && s.getDate().before(endDate)) {
                            newList.add(s);
                        }
                    }
                    tableContents = newList;
                    setTable();
                } catch (IOException | SQLException ex) {
                    Logger.getLogger(TransactionViewerWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                mDialog.hide();
            } catch (Exception e) {
                mDialog.hide();
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        };
        final Thread thread = new Thread(run);
        thread.start();
        mDialog.show();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void chkAllTillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAllTillsActionPerformed
        cmbTerminal.setEnabled(!chkAllTills.isSelected());
    }//GEN-LAST:event_chkAllTillsActionPerformed

    private void chkAllStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAllStaffActionPerformed
        cmbStaff.setEnabled(!chkAllStaff.isSelected());
    }//GEN-LAST:event_chkAllStaffActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        if (evt.getClickCount() == 2) {
            final int index = table.getSelectedRow();
            if (index > -1) {
                final Sale sale = tableContents.get(index);
                SaleDialog.showSaleDialog(sale);
            }
        }
    }//GEN-LAST:event_tableMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        cmbTerminal.setEnabled(false);
        cmbStaff.setEnabled(false);
        chkAllTills.setSelected(true);
        chkAllStaff.setSelected(true);
        spinMoneyMin.setValue(-99999.99);
        spinMoneyMax.setValue(99999.99);
        spinStart.setValue(new Date(0));
        spinEnd.setValue(new Date());
        init();
    }//GEN-LAST:event_btnClearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox chkAllStaff;
    private javax.swing.JCheckBox chkAllTills;
    private javax.swing.JComboBox<String> cmbStaff;
    private javax.swing.JComboBox<String> cmbTerminal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinEnd;
    private javax.swing.JSpinner spinMoneyMax;
    private javax.swing.JSpinner spinMoneyMin;
    private javax.swing.JSpinner spinStart;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
