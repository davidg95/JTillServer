/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.davidg95.JTill.jtillserver;

import io.github.davidg95.JTill.jtill.*;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.Window;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author David
 */
public final class ProductEntryDialog extends javax.swing.JDialog {

    private final DataConnect dc;
    private String barcode;
    private Product product;

    private String nextBarcode;

    private final DefaultComboBoxModel taxModel;
    private final DefaultComboBoxModel catModel;

    /**
     * Creates new form ProductEntryDialog.
     *
     * @param parent the parent component.
     */
    public ProductEntryDialog(Window parent) {
        super(parent);
        this.dc = GUI.gui.dc;
        taxModel = new DefaultComboBoxModel();
        catModel = new DefaultComboBoxModel();
        initCombos();
        initComponents();
        this.setIconImage(GUI.icon);
        setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(parent);
        setModal(true);
        CardLayout c = (CardLayout) container.getLayout();
        c.show(container, "card2");
    }

    private void initCombos() {
        try {
            List<Tax> taxes = dc.getAllTax();
            for (Tax t : taxes) {
                taxModel.addElement(t);
            }
            List<Category> cats = dc.getAllCategorys();
            for (Category c : cats) {
                catModel.addElement(c);
            }
        } catch (IOException | SQLException ex) {
            Logger.getLogger(ProductEntryDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void showDialog(Component parent) {
        Window window = null;
        if (parent instanceof Dialog || parent instanceof Frame) {
            window = (Window) parent;
        }
        ProductEntryDialog dialog = new ProductEntryDialog(window);
        dialog.setVisible(true);
    }

    private void resetPanels() {
        txtBarcode.setText("");

        txtName.setText("");
        txtShortName.setText("");
        txtOrderCode.setText("0");
        txtPrice.setText("");
        txtCostPrice.setText("");
        txtPackSize.setText("");
        txtMinStock.setText("0");
        txtMaxStock.setText("0");
        txtComments.setText("");
        chkIncVat.setSelected(false);

        txtOpenName.setText("");
        txtOpenShort.setText("");
        txtOpenComments.setText("");

        cmbVat.setSelectedIndex(0);
        cmbCat.setSelectedIndex(0);

        cmbOpenVAT.setSelectedIndex(0);
        cmbOpenCat.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        container = new javax.swing.JPanel();
        panOpenProduct = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtOpenName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtOpenShort = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOpenComments = new javax.swing.JTextArea();
        btnAddOpen = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtScaleName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtScale = new javax.swing.JTextField();
        chkScale = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        cmbOpenVAT = new javax.swing.JComboBox<>();
        cmbOpenCat = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        txtCostPercentage = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPriceLimit = new javax.swing.JTextField();
        panBarcode = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        btnEnter = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        radNew = new javax.swing.JRadioButton();
        radCopy = new javax.swing.JRadioButton();
        radNewOpen = new javax.swing.JRadioButton();
        chkNext = new javax.swing.JCheckBox();
        chkAssignNextPrivate = new javax.swing.JCheckBox();
        panProduct = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtOrderCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        btnAddProduct = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtShortName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCostPrice = new javax.swing.JTextField();
        txtMinStock = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaxStock = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtPackSize = new javax.swing.JFormattedTextField();
        chkIncVat = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        cmbVat = new javax.swing.JComboBox<>();
        cmbCat = new javax.swing.JComboBox<>();
        chkTrackStock = new javax.swing.JCheckBox();

        setTitle("Create New Product");
        setResizable(false);

        container.setLayout(new java.awt.CardLayout());

        jLabel3.setText("Product Name:");

        jLabel4.setText("Short Name:");

        jLabel16.setText("Category:");

        jLabel18.setText("Comments:");

        txtOpenComments.setColumns(20);
        txtOpenComments.setRows(5);
        jScrollPane2.setViewportView(txtOpenComments);

        btnAddOpen.setText("Create");
        btnAddOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOpenActionPerformed(evt);
            }
        });

        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        jLabel20.setText("Scale Name:");

        txtScaleName.setText("Price");
        txtScaleName.setEnabled(false);

        jLabel21.setText("Scale Factor:");

        txtScale.setText("1");
        txtScale.setEnabled(false);

        chkScale.setText("Use Scale");
        chkScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkScaleActionPerformed(evt);
            }
        });

        jLabel8.setText("VAT:");

        cmbOpenVAT.setModel(taxModel);

        cmbOpenCat.setModel(catModel);

        jLabel17.setText("Cost Percentage");

        jLabel12.setText("Price Limit:");

        javax.swing.GroupLayout panOpenProductLayout = new javax.swing.GroupLayout(panOpenProduct);
        panOpenProduct.setLayout(panOpenProductLayout);
        panOpenProductLayout.setHorizontalGroup(
            panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOpenProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBack2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel3)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panOpenProductLayout.createSequentialGroup()
                            .addComponent(txtScaleName, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtScale, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(chkScale))
                        .addGroup(panOpenProductLayout.createSequentialGroup()
                            .addComponent(txtCostPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbOpenVAT, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panOpenProductLayout.createSequentialGroup()
                            .addComponent(txtOpenName)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtOpenShort, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panOpenProductLayout.createSequentialGroup()
                            .addComponent(cmbOpenCat, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPriceLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAddOpen, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        panOpenProductLayout.setVerticalGroup(
            panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOpenProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtOpenName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtOpenShort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtScaleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(txtScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkScale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCostPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cmbOpenVAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cmbOpenCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtPriceLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panOpenProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        container.add(panOpenProduct, "card4");

        jLabel1.setText("Enter Barcode:");

        txtBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarcodeActionPerformed(evt);
            }
        });
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyTyped(evt);
            }
        });

        btnEnter.setText("Create");
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });

        btnClose.setText("Cancel");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        buttonGroup1.add(radNew);
        radNew.setSelected(true);
        radNew.setText("Create Standard Product");

        buttonGroup1.add(radCopy);
        radCopy.setText("Copy details from existing");

        buttonGroup1.add(radNewOpen);
        radNewOpen.setText("Create Open Product");

        chkNext.setText("Assign next UPC");
        chkNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNextActionPerformed(evt);
            }
        });

        chkAssignNextPrivate.setText("Assign Next Private");
        chkAssignNextPrivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAssignNextPrivateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panBarcodeLayout = new javax.swing.GroupLayout(panBarcode);
        panBarcode.setLayout(panBarcodeLayout);
        panBarcodeLayout.setHorizontalGroup(
            panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBarcodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panBarcodeLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkAssignNextPrivate)
                            .addComponent(chkNext)))
                    .addGroup(panBarcodeLayout.createSequentialGroup()
                        .addGroup(panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panBarcodeLayout.createSequentialGroup()
                                .addComponent(radNew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radNewOpen))
                            .addComponent(btnEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radCopy)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBarcodeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addContainerGap())
        );
        panBarcodeLayout.setVerticalGroup(
            panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBarcodeLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkNext)
                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkAssignNextPrivate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(panBarcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radNew)
                    .addComponent(radCopy)
                    .addComponent(radNewOpen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnClose)
                .addContainerGap())
        );

        container.add(panBarcode, "card2");

        jLabel13.setText("Order Code:");

        txtOrderCode.setText("0");

        jLabel5.setText("Comments:");

        txtComments.setColumns(20);
        txtComments.setRows(5);
        jScrollPane1.setViewportView(txtComments);

        btnAddProduct.setText("Create");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel6.setText("Short Name:");

        jLabel7.setText("Category:");

        jLabel9.setText("Cost Price (£):");

        txtMinStock.setText("0");

        jLabel10.setText("Min Stock Level:");

        jLabel11.setText("Max Stock Level:");

        jLabel2.setText("Product Name:");

        txtMaxStock.setText("0");

        jLabel14.setText("Price (£):");

        jLabel19.setText("Pack Size:");

        txtPackSize.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        chkIncVat.setText("Price includes VAT");

        jLabel22.setText("VAT:");

        cmbVat.setModel(taxModel);

        cmbCat.setModel(catModel);

        chkTrackStock.setText("Track Stock");

        javax.swing.GroupLayout panProductLayout = new javax.swing.GroupLayout(panProduct);
        panProduct.setLayout(panProductLayout);
        panProductLayout.setHorizontalGroup(
            panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panProductLayout.createSequentialGroup()
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtShortName))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panProductLayout.createSequentialGroup()
                                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPrice)
                                    .addComponent(txtCostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panProductLayout.createSequentialGroup()
                                        .addComponent(chkIncVat)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbVat, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panProductLayout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPackSize, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(panProductLayout.createSequentialGroup()
                            .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmbCat, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panProductLayout.createSequentialGroup()
                                    .addComponent(txtMinStock, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel11)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMaxStock, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(chkTrackStock))
                        .addComponent(txtOrderCode, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddProduct, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        panProductLayout.setVerticalGroup(
            panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtShortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtOrderCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkIncVat)
                    .addComponent(jLabel22)
                    .addComponent(cmbVat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtPackSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtMinStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtMaxStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkTrackStock))
                .addGap(1, 1, 1)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddProduct)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        container.add(panProduct, "card3");

        getContentPane().add(container, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        String name = txtName.getText();
        String shortName = txtShortName.getText();
        String val = txtOrderCode.getText();
        if (!Utilities.isNumber(val)) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int orderCode = Integer.parseInt(val);
        Category category = (Category) cmbCat.getSelectedItem();
        Tax tax = (Tax) cmbVat.getSelectedItem();
        String comments = txtComments.getText();
        if (!Utilities.isNumber(txtPrice.getText())) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BigDecimal price = new BigDecimal(txtPrice.getText());
        if (price.compareTo(BigDecimal.ZERO) < 0) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Utilities.isNumber(txtCostPrice.getText())) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BigDecimal costPrice = new BigDecimal(txtCostPrice.getText());
        if (costPrice.compareTo(BigDecimal.ZERO) < 0) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int packSize = Integer.parseInt(txtPackSize.getText());
        if (packSize < 1) {
            JOptionPane.showMessageDialog(this, "Pack size must be 1 or greater", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Utilities.isNumber(txtMinStock.getText())) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int minStock = Integer.parseInt(txtMinStock.getText());
        if (minStock < 0) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Utilities.isNumber(txtMaxStock.getText())) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int maxStock = Integer.parseInt(txtMaxStock.getText());
        if (maxStock < 0) {
            JOptionPane.showMessageDialog(this, "Not all fields have been filled out correctly", "Create New Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        boolean incVat = chkIncVat.isSelected();
        boolean trackStock = chkTrackStock.isSelected();
        product = new Product(name, shortName, barcode, orderCode, category, comments, tax, price, costPrice, incVat, packSize, 0, minStock, maxStock, 0, 0, 0, trackStock);
        try {
            product = dc.addProduct(product);
            if (nextBarcode != null) {
                dc.setSetting("NEXT_PLU", nextBarcode);
                nextBarcode = null;
            }
            JOptionPane.showMessageDialog(this, "New product has been created", "New Product", JOptionPane.INFORMATION_MESSAGE);
            resetPanels();
            CardLayout c = (CardLayout) container.getLayout();
            c.show(container, "card2");
            txtBarcode.requestFocus();
        } catch (HeadlessException | IOException | NumberFormatException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardLayout c = (CardLayout) container.getLayout();
        c.show(container, "card2");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
        try {
            if (chkNext.isSelected()) {
                String upc = dc.getSetting("UPC_PREFIX"); //Get the UPC Prefix
                int length = Integer.parseInt(dc.getSetting("BARCODE_LENGTH")); //Get the barcode length
                if (!upc.equals("")) { //Check that the UPC has been set
                    while (true) {
                        int lengthToAdd = length - upc.length() - 1; //Work out how many more digits need added
                        String ref = dc.getSetting("NEXT_PLU"); //Get the next PLU number
                        int n = Integer.parseInt(ref);
                        int max = (int) Math.pow(10, length - upc.length() - 1);
                        int remaining = max - n;
                        if (remaining == 0) {
                            JOptionPane.showMessageDialog(this, "There are no more avaliable barcodes for this UPC Prefix", "No More Barcodes", JOptionPane.WARNING_MESSAGE);
                            chkNext.setSelected(false);
                            txtBarcode.setEnabled(true);
                            return;
                        }
                        n++;
                        nextBarcode = Integer.toString(n); // Increase it then convert it to a String

                        lengthToAdd -= ref.length(); //Subtract the length to find out how many digits need added
                        for (int i = 1; i <= lengthToAdd; i++) {
                            ref = 0 + ref; //Pad it out with zero's to make up the length
                        }
                        String barcode = upc + ref; //Join them all together
                        int checkDigit = Utilities.calculateCheckDigit(barcode);
                        barcode = barcode + checkDigit;
                        if (!dc.checkBarcode(barcode)) { //Check the barcode is not already int use
                            this.barcode = barcode;
                            break; //break from the while loop
                        } else {
                            dc.setSetting("NEXT_PLU", nextBarcode);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "You have not specified a UPC Company Prefix. This must be done before generating your own barcodes. Go to Setup -> Plu Settings to do this.", "Generate Barcode", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                //If excecution reaches here, it means an unused PLU as been generated
            } else if (chkAssignNextPrivate.isSelected()) {
                while (true) {
                    String nextPrivate = dc.getSetting("NEXT_PRIVATE"); //Get the next PLU number
                    int n = Integer.parseInt(nextPrivate);
                    n++;
                    nextBarcode = Integer.toString(n); // Increase it then convert it to a String

                    String barcode = nextPrivate; //Join them all together
                    if (!dc.checkBarcode(barcode)) { //Check the barcode is not already int use
                        this.barcode = barcode;
                        break; //break from the while loop
                    } else {
                        dc.setSetting("NEXT_PRIVATE", nextBarcode);
                    }
                }
            } else {
                //Get the PLU from the user, check what they entered is valid
                String barcode = txtBarcode.getText();
                if (barcode.equals("")) {
                    JOptionPane.showMessageDialog(this, "You must enter a barcode", "New Product", JOptionPane.WARNING_MESSAGE);
                    txtBarcode.setSelectionStart(0);
                    txtBarcode.setSelectionEnd(barcode.length());
                    return;
                } else if (!Utilities.validateBarcodeLenth(barcode)) {
                    JOptionPane.showMessageDialog(this, "Barcode must be 8, 12, 13 or 14 digits long", "New Product", JOptionPane.WARNING_MESSAGE);
                    txtBarcode.setSelectionStart(0);
                    txtBarcode.setSelectionEnd(barcode.length());
                    return;
                } else if (!barcode.matches("[0-9]+")) {
                    JOptionPane.showMessageDialog(this, "Must only contain numbers", "New Product", JOptionPane.WARNING_MESSAGE);
                    txtBarcode.setSelectionStart(0);
                    txtBarcode.setSelectionEnd(barcode.length());
                    return;
                }
                if (!Utilities.validateBarcode(barcode)) {
                    JOptionPane.showMessageDialog(this, "Invalid check digit", "New Product", JOptionPane.ERROR_MESSAGE);
                    txtBarcode.setSelectionStart(0);
                    txtBarcode.setSelectionEnd(barcode.length());
                    return;
                }
                if (dc.checkBarcode(barcode)) {
                    JOptionPane.showMessageDialog(this, "Barcode is already in use", "Barcode in use", JOptionPane.WARNING_MESSAGE);
                    txtBarcode.setSelectionStart(0);
                    txtBarcode.setSelectionEnd(barcode.length());
                    return;
                }
                this.barcode = txtBarcode.getText();
            }
            //Check what kinda of product they want to create
            if (radNew.isSelected()) { //Create a new standard product
                txtBarcode.setText("");
                CardLayout c = (CardLayout) container.getLayout();
                c.show(container, "card3");
                txtName.requestFocus();
            } else if (radNewOpen.isSelected()) { //Create a new open price product
                txtBarcode.setText("");
                CardLayout c = (CardLayout) container.getLayout();
                c.show(container, "card4");
                txtOpenName.requestFocus();
            } else {
                Product toCopy = ProductSelectDialog.showDialog(this); //Copy details from an existing product
                if (toCopy != null) {
                    toCopy.setStock(0);
                    toCopy.setBarcode(this.barcode);
                    try {
                        dc.addProduct(toCopy);
                        JOptionPane.showMessageDialog(this, "New Plu created", "New Plu", JOptionPane.INFORMATION_MESSAGE);
                        txtBarcode.setText("");
                        radNew.setSelected(true);
                        txtBarcode.requestFocus();
                    } catch (IOException ex) {
                        Logger.getLogger(ProductEntryDialog.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(ProductEntryDialog.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } catch (IOException | SQLException ex) {
            Logger.getLogger(ProductEntryDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnterActionPerformed

    private void txtBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarcodeActionPerformed
        btnEnter.doClick();
    }//GEN-LAST:event_txtBarcodeActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        CardLayout c = (CardLayout) container.getLayout();
        c.show(container, "card2");
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void btnAddOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOpenActionPerformed
        String name = txtOpenName.getText();
        String shortName = txtOpenShort.getText();
        Category category = (Category) cmbOpenCat.getSelectedItem();
        Tax tax = (Tax) cmbVat.getSelectedItem();
        String comments = txtOpenComments.getText();
        String strCost = txtCostPercentage.getText();
        if (!Utilities.isNumber(strCost)) {
            JOptionPane.showMessageDialog(this, "Must enter a number for cost", "Open Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BigDecimal cost = new BigDecimal(strCost);
        if (cost.compareTo(BigDecimal.ZERO) == -1 || cost.compareTo(new BigDecimal(100)) == 1) {
            JOptionPane.showMessageDialog(this, "Cost % must be between 0 and 100", "Open Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Utilities.isNumber(txtPriceLimit.getText())) {
            JOptionPane.showMessageDialog(this, "Must enter a number", "Create Product", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BigDecimal price = new BigDecimal(txtPriceLimit.getText());
        try {
            String scaleName;
            double scale;
            if (chkScale.isSelected()) {
                scaleName = txtScaleName.getText();
                String strScale = txtScale.getText();
                if (!Utilities.isNumber(strScale)) {
                    JOptionPane.showMessageDialog(this, "Must enter a number for scale factor", "Open Product", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                scale = Double.parseDouble(strScale);
                if (scale <= 0) {
                    JOptionPane.showMessageDialog(this, "Scale must be greater than 0", "Open Product", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                scaleName = "Price";
                scale = -1;
            }
            if (name.length() == 0 || shortName.length() == 0 || txtScaleName.getText().isEmpty() || txtScale.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "All fields must be filled out", "Create Product", JOptionPane.ERROR_MESSAGE);
                return;
            }
            product = new Product(name, shortName, barcode, 0, category, comments, tax, scale, scaleName, cost, price);
            product = dc.addProduct(product);
            if (chkNext.isSelected()) {
                dc.setSetting("NEXT_PLU", nextBarcode);
            }
            JOptionPane.showMessageDialog(this, "New product has been created", "New Product", JOptionPane.INFORMATION_MESSAGE);
            resetPanels();
            CardLayout c = (CardLayout) container.getLayout();
            c.show(container, "card2");
            txtBarcode.requestFocus();
        } catch (HeadlessException | IOException | NumberFormatException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddOpenActionPerformed

    private void chkNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNextActionPerformed
        txtBarcode.setEnabled(!chkNext.isSelected());
        if (chkNext.isSelected()) {
            chkAssignNextPrivate.setSelected(false);
        }
    }//GEN-LAST:event_chkNextActionPerformed

    private void chkScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkScaleActionPerformed
        txtScale.setEnabled(chkScale.isSelected());
        txtScaleName.setEnabled(chkScale.isSelected());
    }//GEN-LAST:event_chkScaleActionPerformed

    private void txtBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyPressed
//        char c = evt.getKeyChar();
//        String s = Character.toString(c);
//        if ((!(s.matches("[0-9]+"))) && !isBackspace) {
//            evt.consume();
//        }
//        if (txtBarcode.getSelectionStart() < txtBarcode.getSelectionEnd()) {
//            btnEnter.setEnabled(false);
//            return;
//        }
//        int length = txtBarcode.getText().length() + 1;
//        if (isBackspace) {
//            length--;
//        }
//        if (length > 14) {
//            evt.consume();
//            return;
//        }
//        if (length == 8 || length == 12 || length == 13 || length == 14) {
//            btnEnter.setEnabled(true);
//        } else {
//            btnEnter.setEnabled(false);
//        }
    }//GEN-LAST:event_txtBarcodeKeyPressed

    private void txtBarcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyTyped
        char c = evt.getKeyChar();
        String s = Character.toString(c);
        if (!(s.matches("[0-9]+"))) {
            evt.consume();
        }
//        int length = txtBarcode.getText().length() + 1;
//        if (length > 14) {
//            evt.consume();
//            return;
//        }
//        if (length == 8 || length == 12 || length == 13 || length == 14) {
//            btnEnter.setEnabled(true);
//        } else {
//            btnEnter.setEnabled(false);
//        }
    }//GEN-LAST:event_txtBarcodeKeyTyped

    private void chkAssignNextPrivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAssignNextPrivateActionPerformed
        txtBarcode.setEnabled(!chkAssignNextPrivate.isSelected());
        if (chkAssignNextPrivate.isSelected()) {
            chkNext.setSelected(false);
        }
    }//GEN-LAST:event_chkAssignNextPrivateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOpen;
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEnter;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkAssignNextPrivate;
    private javax.swing.JCheckBox chkIncVat;
    private javax.swing.JCheckBox chkNext;
    private javax.swing.JCheckBox chkScale;
    private javax.swing.JCheckBox chkTrackStock;
    private javax.swing.JComboBox<String> cmbCat;
    private javax.swing.JComboBox<String> cmbOpenCat;
    private javax.swing.JComboBox<String> cmbOpenVAT;
    private javax.swing.JComboBox<String> cmbVat;
    private javax.swing.JPanel container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panBarcode;
    private javax.swing.JPanel panOpenProduct;
    private javax.swing.JPanel panProduct;
    private javax.swing.JRadioButton radCopy;
    private javax.swing.JRadioButton radNew;
    private javax.swing.JRadioButton radNewOpen;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextArea txtComments;
    private javax.swing.JTextField txtCostPercentage;
    private javax.swing.JTextField txtCostPrice;
    private javax.swing.JTextField txtMaxStock;
    private javax.swing.JTextField txtMinStock;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtOpenComments;
    private javax.swing.JTextField txtOpenName;
    private javax.swing.JTextField txtOpenShort;
    private javax.swing.JTextField txtOrderCode;
    private javax.swing.JFormattedTextField txtPackSize;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPriceLimit;
    private javax.swing.JTextField txtScale;
    private javax.swing.JTextField txtScaleName;
    private javax.swing.JTextField txtShortName;
    // End of variables declaration//GEN-END:variables
}
