/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.davidg95.JTill.jtillserver;

import io.github.davidg95.JTill.jtill.*;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class TillDialog extends javax.swing.JDialog {

    private static JDialog dialog;

    private Till till;
    private final DataConnect dc;
    private final DefaultTableModel model;
    private List<Sale> contents;

    /**
     * Creates new form TillDialog
     *
     * @param parent the parent component.
     * @param t the till.
     */
    public TillDialog(Window parent, Till t) {
        super(parent);
        this.till = t;
        this.dc = GUI.gui.dc;
        initComponents();
        setTitle(till.getName());
        setModal(true);
        setLocationRelativeTo(parent);
        txtID.setText("" + till.getId());
        txtUUID.setText(till.getUuid().toString());
        txtName.setText(till.getName());
        txtUncashedTakings.setText("Â£" + till.getUncashedTakings());
        if (t.getLastContact() == null) {
            txtLastContact.setText("None");
        } else {
            txtLastContact.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(till.getLastContact()));
        }
        txtStaff.setText("Not logged in");
        for (ConnectionThread thread : ConnectionAcceptThread.connections) {
            if (thread.till.equals(t)) {
                Staff s = thread.staff;
                if (s == null) {
                    txtStaff.setText("Not logged in");
                } else {
                    txtStaff.setText(thread.staff.getName());
                }
            }
        }
        model = (DefaultTableModel) table.getModel();
        table.setModel(model);
        getAllSales();
    }

    public static void showDialog(Component parent, Till till) {
        Window window = null;
        if (parent instanceof Dialog || parent instanceof Frame) {
            window = (Window) parent;
        }
        dialog = new TillDialog(window, till);
        dialog.setVisible(true);
    }

    private void getAllSales() {
        try {
            contents = dc.getTerminalSales(till.getId(), true);
            model.setRowCount(0);
            for (Sale s : contents) {
                model.addRow(new Object[]{s.getDate(), s.getTotalItemCount(), s.getTotal()});
            }
        } catch (IOException | SQLException | JTillException ex) {
            Logger.getLogger(TillDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblTakings = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        lblStaff = new javax.swing.JLabel();
        lblLastContact = new javax.swing.JLabel();
        lblUUID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtUUID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtUncashedTakings = new javax.swing.JTextField();
        txtStaff = new javax.swing.JTextField();
        txtLastContact = new javax.swing.JTextField();
        btnCashup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblID.setText("Till ID: ");

        lblName.setText("Till Name: ");

        lblTakings.setText("Uncashed Takings: ");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lblStaff.setText("Staff:");

        lblLastContact.setText("Last Contact:");

        lblUUID.setText("UUID:");

        txtID.setEditable(false);

        txtUUID.setEditable(false);

        txtName.setEditable(false);

        txtUncashedTakings.setEditable(false);

        txtStaff.setEditable(false);

        txtLastContact.setEditable(false);

        btnCashup.setText("Cash Up");
        btnCashup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCashupActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Timestamp", "Items", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLastContact, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblStaff, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTakings, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUUID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblID, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUUID, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtUncashedTakings, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCashup))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtLastContact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addComponent(txtStaff, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(btnClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUUID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTakings)
                            .addComponent(txtUncashedTakings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCashup))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStaff)
                            .addComponent(txtStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastContact)
                            .addComponent(txtLastContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCashupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCashupActionPerformed
        try {
            TillReport report = new TillReport();
            report.actualTakings = dc.getTillTakings(till.getId());
            if (report.actualTakings.compareTo(BigDecimal.ZERO) <= 0) {
                JOptionPane.showMessageDialog(this, "That till currently has no declared takings", "Cash up till " + till.getName(), JOptionPane.PLAIN_MESSAGE);
                return;
            }
            report.actualTakings = report.actualTakings.setScale(2);
            String strVal = JOptionPane.showInputDialog(this, "Enter value of money counted", "Cash up till " + till.getName(), JOptionPane.PLAIN_MESSAGE);
            if (strVal == null || strVal.equals("")) {
                return;
            }
            if (!Utilities.isNumber(strVal)) {
                JOptionPane.showMessageDialog(this, "You must enter a number greater than zero", "Cash up till " + till.getName(), JOptionPane.ERROR_MESSAGE);
                return;
            }
            report.declared = new BigDecimal(strVal);
            report.declared = report.declared.setScale(2);
            report.difference = report.declared.subtract(report.actualTakings);
            report.difference = report.difference.setScale(2);
            DecimalFormat df;
            if (report.actualTakings.compareTo(BigDecimal.ONE) >= 1) {
                df = new DecimalFormat("#.00");
            } else {
                df = new DecimalFormat("0.00");
            }
            DecimalFormat df2;
            if (report.difference.compareTo(BigDecimal.ONE) >= 1) {
                df2 = new DecimalFormat("#.00");
            } else {
                df2 = new DecimalFormat("0.00");
            }
            report.averageSpend = report.actualTakings.divide(new BigDecimal(1));
            till = dc.getTill(till.getId());
            txtUncashedTakings.setText("Â£" + till.getUncashedTakings());
            report.tax = BigDecimal.ZERO;
            
            model.setRowCount(0);

            TillReportDialog.showDialog(this, report);

            if (JOptionPane.showConfirmDialog(this, "Do you want the report emailed?", "Cash up", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                String message = "Cashup for terminal " + till.getName()
                        + "\nValue counted: Â£" + report.declared.toString()
                        + "\nActual takings: Â£" + report.actualTakings.toString()
                        + "\nDifference: Â£" + report.difference.toString();
                final ModalDialog mDialog = new ModalDialog(this, "Email", "Emailing...");
                final Runnable run = new Runnable() {
                    @Override
                    public void run() {
                        try {
                            dc.sendEmail(message);
                            mDialog.hide();
                            JOptionPane.showMessageDialog(TillDialog.this, "Email sent", "Email", JOptionPane.INFORMATION_MESSAGE);
                        } catch (IOException ex) {
                            mDialog.hide();
                            JOptionPane.showMessageDialog(TillDialog.this, "Error sending email", "Email", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                };
                final Thread thread = new Thread(run);
                thread.start();
                mDialog.show();
            }
        } catch (IOException | SQLException | TillNotFoundException ex) {
            Logger.getLogger(TillDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCashupActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCashup;
    private javax.swing.JButton btnClose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLastContact;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblStaff;
    private javax.swing.JLabel lblTakings;
    private javax.swing.JLabel lblUUID;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLastContact;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtStaff;
    private javax.swing.JTextField txtUUID;
    private javax.swing.JTextField txtUncashedTakings;
    // End of variables declaration//GEN-END:variables
}
